       Kubernetes installation using KOPS method

Follow the steps below to create K8’S cluster in AWS using KOPS
Pre-requisites
1. Launch ec2 ubuntu instance (t2.  Micro)
2. Create a IAM user with the following permission
              - AmazonEC2FullAccess
              - AmazonRoute53FullAccess 
              - AmazonS3 Full Access
              - IAM Full Access 
              - Amazon VPC Full Access
3. Create s3 bucket and enable bucket versioning
            KOPS Binary and KUBECTL Binary setup
1. Download KOPS Binary setup 
             curl -Lo kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
2. Change the permissions for KOPS directory
      chmod +x ./kops
3. Move the KOPS directory to the /usr directory
      sudo mv ./kops /usr/local/bin/
        (Based on Linux file hierarchy Multi user utilities/applications are stored in this directory)
4. Download KUBECTL Binary setup
             curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
5. Change the permissions for KUBECTL directory
             chmod +x ./kubectl
6. Move the KUBECTL directory to the /usr directory
      sudo mv ./kubectl /usr/local/bin/kubectl
7. Download AWS CLI 
          Sudo apt install awscli
8. AWS Configure
           Login as IAM User using access key and secret access key
9. Add variable for access key and secret access key
               export AWS_ACCESS_KEY_ID=your access key
               export AWS_SECRET_ACCESS_KEY=your secret access key
10. We created s3 bucket to store state file which will be generated when we run KOPS cluster
11. Create a public key and private key using the following command ssh-keygen (it creates the keys in following name id_rsa and id_rsa.pub)
12. Create variable for cluster name and state file 
        export NAME=ragu.k8s.local (replace ragu with your cluster name but it should have .k8s./local )
        export KOPS_STATE_STORE=s3://kops-buk-1610 (replace kops with your bucket name)

                  Creating Kubernetes cluster using KOPS
 
1. Create k8’s cluster using following command
            kops create cluster --zones us-east-1a ${NAME}
                (replace the zones with your choice )

2. It shows that Cluster configuration has been created.
      Suggestions:
             * list clusters with: kops get cluster
             * edit this cluster with: kops edit cluster ragu.k8s.local
             * edit your node instance group: kops edit ig --name=ragu.k8s.local nodes-us-east-1a
             * edit your control-plane instance group: kops edit ig --name=ragu.k8s.local control-plane-us-east-1a

3. Finally configure your cluster with: kops update cluster --name ragu.k8s.local --yes --admin
        
4. It shows the following suggestions
     Suggestions:
             * validate cluster: kops validate cluster --wait 10m
             * list nodes: kubectl get nodes --show-labels
             * ssh to a control-plane node: ssh -i ~/.ssh/id_rsa ubuntu@
             * the ubuntu user is specific to Ubuntu. If not using Ubuntu please use the appropriate user based on your OS.
              * read about installing addons at: https://kops.sigs.k8s.io/addons.

                   KOPS CLUSTER DETAILS

1. To list all clusters - kops get cluster
2. TO edit cluster – kops edit cluster (cluster name)
3. TO edit worker node - kops edit ig --name=ragu.k8s.local nodes-us-east-1a
4. TO edit master node - kops edit ig --name=ragu.k8s.local control-plane-us-east-1a
5. To update cluster - kops update cluster --name ragu.k8s.local --yes –admin
6. TO delete cluster – kops delete cluster –name= ragu.k8s.local –state=s3:// kops-buk-1610
